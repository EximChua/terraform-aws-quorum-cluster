{
  "min_packer_version": "0.12.0",
  "variables": {
    "aws_region": "us-east-1",
    "extra_regions": "us-east-2,us-west-1,us-west-2,eu-central-1,eu-west-1,eu-west-2,ap-south-1,ap-northeast-1,ap-northeast-2,ap-southeast-1,ap-southeast-2,ca-central-1,sa-east-1",
    "ami_groups": "all",
    "vault_version": "0.9.0",
    "consul_version": "1.0.1",
    "consul_module_version": "v0.1.0",
    "terraform_aws_vault_module_version": "v0.0.8",
    "ca_public_key_path": "certs/ca-cert.pub",
    "tls_public_key_path": "certs/cert.pub"
  },
  "builders": [{
    "ami_name": "eximchain-network-quorum-{{isotime | clean_ami_name}}",
    "ami_description": "An Ubuntu 16.04 AMI with Quorum installed, that has Vault and Consul installed to use as a client.",
    "instance_type": "t2.medium",
    "name": "ubuntu16-quorum-ami",
    "region": "{{user `aws_region`}}",
    "ami_regions": "{{user `extra_regions`}}",
    "ami_groups": "{{user `ami_groups`}}",
    "type": "amazon-ebs",
    "source_ami_filter": {
      "filters": {
        "virtualization-type": "hvm",
        "architecture": "x86_64",
        "name": "*ubuntu-xenial-16.04-amd64-server-*",
        "block-device-mapping.volume-type": "gp2",
        "root-device-type": "ebs"
      },
      "owners": ["099720109477"],
      "most_recent": true
    },
    "ssh_username": "ubuntu"
  }],
  "provisioners": [{
    "type": "shell",
    "script": "provisioning-scripts/build-deps.sh",
    "pause_before": "30s"
  },{
    "type": "shell",
    "inline": [
      "git clone --branch {{user `terraform_aws_vault_module_version`}} https://github.com/hashicorp/terraform-aws-vault.git /tmp/terraform-aws-vault",
      "/tmp/terraform-aws-vault/modules/install-vault/install-vault --version {{user `vault_version`}}",
      "sudo cp /tmp/terraform-aws-vault/modules/update-certificate-store/update-certificate-store /opt/vault/bin/"
    ]
  },{
    "type": "shell",
    "inline": [
      "git clone --branch {{user `consul_module_version`}} https://github.com/hashicorp/terraform-aws-consul.git /tmp/terraform-aws-consul",
      "/tmp/terraform-aws-consul/modules/install-consul/install-consul --version {{user `consul_version`}}",
      "/tmp/terraform-aws-consul/modules/install-dnsmasq/install-dnsmasq"
    ]
  },{
    "type": "shell",
    "scripts": [
      "provisioning-scripts/constellation.sh",
      "provisioning-scripts/golang.sh",
      "provisioning-scripts/solc.sh",
      "provisioning-scripts/quorum.sh",
      "provisioning-scripts/quorum-setup.sh",
      "provisioning-scripts/porosity.sh",
      "provisioning-scripts/quorum-genesis.sh",
      "provisioning-scripts/s3fs.sh",
      "provisioning-scripts/swapfile.sh"
    ]
  },{
    "type": "file",
    "source": "instance-scripts/generate-run-init-quorum",
    "destination": "/tmp/generate-run-init-quorum"
  },{
    "type": "file",
    "source": "instance-scripts/init-quorum.sh",
    "destination": "/tmp/init-quorum.sh"
  },{
    "type": "file",
    "source": "instance-scripts/cloudwatch-txpool.sh",
    "destination": "/tmp/cloudwatch-txpool.sh"
  },{
    "type": "file",
    "source": "instance-scripts/generate-quorum-config.py",
    "destination": "/tmp/generate-quorum-config.py"
  },{
    "type": "file",
    "source": "instance-scripts/fill-node-counts.py",
    "destination": "/tmp/fill-node-counts.py"
  },{
    "type": "file",
    "source": "instance-scripts/crashcloudwatch.py",
    "destination": "/tmp/crashcloudwatch.py"
  },{
    "type": "file",
    "source": "instance-scripts/private-transaction-test-sender.sh",
    "destination": "/tmp/private-transaction-test-sender.sh"
  },{
    "type": "file",
    "source": "instance-scripts/private-transaction-test-recipient.sh",
    "destination": "/tmp/private-transaction-test-recipient.sh"
  },{
    "type": "shell",
    "inline": [
      "sudo mv /tmp/init-quorum.sh /opt/quorum/bin/",
      "sudo mv /tmp/cloudwatch-txpool.sh /opt/quorum/bin/",
      "sudo mv /tmp/generate-run-init-quorum /opt/quorum/bin/",
      "sudo mv /tmp/generate-quorum-config.py /opt/quorum/bin/",
      "sudo mv /tmp/fill-node-counts.py /opt/quorum/bin/",
      "sudo mv /tmp/crashcloudwatch.py /opt/quorum/bin/",
      "sudo mv /tmp/private-transaction-test-sender.sh /opt/quorum/bin/",
      "sudo mv /tmp/private-transaction-test-recipient.sh /opt/quorum/bin/",
      "sudo chmod 744 /opt/quorum/bin/*"
    ]
  },{
    "type": "file",
    "source": "configs/constellation-supervisor.conf",
    "destination": "/tmp/constellation-supervisor.conf"
  },{
    "type": "file",
    "source": "configs/constellation.conf",
    "destination": "/tmp/constellation.conf"
  },{
    "type": "file",
    "source": "data/regions.txt",
    "destination": "/tmp/regions.txt"
  },{
    "type": "shell",
    "inline": [
      "sudo mv /tmp/constellation-supervisor.conf /opt/quorum/private/",
      "sudo mv /tmp/regions.txt /opt/quorum/info/",
      "sudo mv /tmp/constellation.conf /opt/quorum/constellation/config.conf"
    ]
  },{
    "type": "shell",
    "script": "provisioning-scripts/init-zero-counts.sh"
  }],
  "post-processors": [{
    "type": "manifest",
    "output": "manifests/quorum.json",
    "strip_path": true
  }]
}
